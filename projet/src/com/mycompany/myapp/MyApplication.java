package com.mycompany.myapp;


import static com.codename1.charts.util.ColorUtil.WHITE;
import com.codename1.components.MultiButton;
import com.codename1.components.SpanButton;
import com.codename1.components.SpanLabel;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.ui.Button;
import com.codename1.ui.ComboBox;
import com.codename1.ui.Command;
import com.codename1.ui.Component;
import com.codename1.ui.Container;
import com.codename1.ui.Font;
import com.codename1.ui.Image;
import com.codename1.ui.TextField;
import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.events.ActionListener;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.layouts.CoordinateLayout;
import com.codename1.ui.layouts.FlowLayout;
import com.codename1.ui.plaf.Style;
import static com.codename1.ui.plaf.Style.BACKGROUND_IMAGE_SCALED;
import com.entities.myapp.ProductEntity;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;
    
    public static Form showCart;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        
        Image logo_cart = null;
        
        
        Image image_title= null;
        
        Image font_background = null;
        
        try{
            
            logo_cart = Image.createImage("/cart.jpg");
            
            image_title = Image.createImage("/logopidev.png");
        
            font_background = Image.createImage("/hero.jpg");
            
        } catch(IOException ex){
        
            Dialog.show("Erreur de chargement",ex.getMessage(),"OK",null);
        }
        
        
        Form hi = new Form(null, BoxLayout.y());
        
        Container title = new Container(new BorderLayout());
        
        Button button_title = new Button(image_title);
        
        title.add(BorderLayout.CENTER,button_title);
                
        hi.getToolbar().setTitleComponent(title);
        
        hi.getToolbar().addCommandToRightSideMenu("Home",null,evt->{
        
        Form home = new Form();
        
        Label l = new Label("Bonsoir");
        
        home.add(l);
        
        home.show();
        
        });
        
        //Element Product qui se trouve dans le menu et qui permet de gérer la page produit.
        
        hi.getToolbar().addCommandToRightSideMenu("Product",null,evt->{
        
        ProductEntity AllProduct = new ProductEntity();
        
        AllProduct.showAllProduct(hi);
            
        });
        
        hi.getToolbar().addCommandToRightSideMenu("Dashboard",null,evt->{
        
        AdminDashboard adminDash = new AdminDashboard();
        
        adminDash.showDashboard(hi);
        
        });
        
        hi.getToolbar().addCommandToRightSideMenu("Pages",null,evt->{
        
        Form pages = new Form();
        
        Label l4 = new Label("Bienvenue dans Pages");
        
        pages.add(l4);
        
        pages.show();
      
        });
        
        hi.getToolbar().addCommandToRightSideMenu("Listing",null,evt->{
        
        Form listing = new Form();
        
        Label l5 = new Label("Bienvenue dans la page Listing");
        
        listing.add(l5);
        
        listing.show();
        
        });
        
        hi.getToolbar().addCommandToRightSideMenu("Login",null,evt->{
        
        Form login = new Form();
        
        Label l6 = new Label("Bienvenue dans la page Login");
        
        login.add(l6);
        
        login.show();
        
        });
        
        hi.getToolbar().addCommandToRightSideMenu("Add Listing",null,evt->{
        
        Form add_listing = new Form();
        
        Label l7 = new Label("Bonsoir");
        
        add_listing.add(l7);
        
        add_listing.show();
        
        });
        
        
       
       // Boutton du panier et son logo
        
        Button cart = new Button(logo_cart);
        
        Label numberProductInCart = null;
        
        Container container_cart = new Container();
        
        container_cart.add(cart);
        
        //La méthode du panier qui va me permettre d'etre rediriger vers le panier
        
        hi.add(container_cart);
        
        cart.addActionListener((e)->{
        
            ProductEntity displayCart = new ProductEntity();
            
            displayCart.displayProductInCart(hi);
        
        
        });
       
        Style recuperation = hi.getStyle();
        
        recuperation.setBgImage(font_background);
        
        recuperation.setBackgroundType(BACKGROUND_IMAGE_SCALED);
        
        SpanButton buttonIndex = new SpanButton();
        
        SpanLabel text1 = new SpanLabel("Buy & Sell Near You");
         
        SpanLabel text2 = new SpanLabel("Join the millions who buy and sell from each other \n "+"everyday in local communities around the world");
        
        Label popular = new Label("POPULAR CATEGORY");
        
        hi.add(text1);
        
        hi.add(text2);
        
        hi.add(popular);
        
        //BoxLayout layout = new BoxLayout(BoxLayout.X_AXIS);
        
        Container button = new Container();
        
        Image coffeIcon = null;
        
        Image restaurantsIcon = null;
        
        Image carsIcon = null;
        
        Image fitnessIcon = null;
        
        Image hotelIcon = null;
        
        Image line = null;
        
        Image white = null;
        
        Image silver = null;
        
        Image next = null;
        
        Image product_test = null;
        
        Image electronics = null;
        
        Image bag = null;
        
        Image blue = null;
        
        Image black = null;
        
        try{
        
            coffeIcon = Image.createImage("/cafe.png");
            
            restaurantsIcon = Image.createImage("/restaurants.png");
            
            carsIcon = Image.createImage("/cars.jpg");
            
            fitnessIcon = Image.createImage("/fitness.png");
            
            hotelIcon = Image.createImage("/hotel.png");
            
            line = Image.createImage("/line.jpg");
            
            white = Image.createImage("/white.png");
            
            silver = Image.createImage("/silver.png");
            
            next = Image.createImage("/next.png");
            
            product_test = Image.createImage("/product_test.jpg");
            
            electronics = Image.createImage("/electronics.jpg");
            
            bag = Image.createImage("/bag.jpg");
            
            blue = Image.createImage("/blue.jpg");
            
            black = Image.createImage("/black.png");
            
        } catch(IOException ex){
        
            Dialog.show("Erreur de chargement",ex.getMessage(),"OK",null);
        }
        
        Button bHotel = new Button("Hotel",hotelIcon);
        
        Button bFitness = new Button("Fitness",fitnessIcon);
        
        Button bCars = new Button("Cars",carsIcon);
        
        Button bRestaurants = new Button("Restaurants",restaurantsIcon);
        
        Button bCoffe = new Button("Cafe",coffeIcon);
        
        button.add(bHotel);
        
        button.add(bFitness);
        
        button.add(bCars);
        
        button.add(bRestaurants);
        
        button.add(bCoffe);
        
        hi.add(button);
        
        BoxLayout layout = new BoxLayout(BoxLayout.Y_AXIS);
        
        Container form = new Container(layout);
        
        Style whiteBackground = form.getStyle();
        
        whiteBackground.setBgImage(white);
        
        TextField look = new TextField();
        
        look.setHint("What are you loooking for");
        
        ComboBox category = new ComboBox("Category");
        
        category.addItem("Top rated");
        
        category.addItem("Lowest Price");
        
        category.addItem("Highest Price");
        
        TextField location = new TextField();
        
        location.setHint("Location");
        
        Button search = new Button("Search Now");
        
        form.add(look);
        
        form.add(category);
        
        form.add(location);
        
        form.add(search);
        
        hi.add(form);
        
        Label adds = new Label("Trending Adds");
        
        SpanLabel ipsum = new SpanLabel("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas, magnam.");
        
        Label image = new Label(line);
        
        Container trend = new Container(new BoxLayout(BoxLayout.Y_AXIS));
        
        Style trendBg = trend.getStyle();
        
        trendBg.setBgImage(silver);
        
        trend.add(adds);
        
        trend.add(ipsum);
        
        trend.add(image);
        
        Container multi = new Container(new BoxLayout(BoxLayout.Y_AXIS));
        
        MultiButton  multiProduct = new MultiButton();
        
        multiProduct.setTextLine1("Full Study Table Combo");
        
        multiProduct.setTextLine2("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas, magnam.");
        
        multiProduct.setIcon(product_test);
        
        multiProduct.setEmblem(next);
        
        multi.add(multiProduct);
        
        trend.add(multi);
             
                
       hi.add(trend);
       
       Label all = new Label("All Categories");
       
       SpanLabel lorem = new SpanLabel("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas, magnam.");
       
       Label lines = new Label(line);
       
       Container AllCategorie = new Container(new BoxLayout(BoxLayout.Y_AXIS));
       
       AllCategorie.add(all);
       
       AllCategorie.add(lorem);
       
       AllCategorie.add(lines);
       
       Style allCategorieStyle = AllCategorie.getStyle();
       
       allCategorieStyle.setBgImage(white);
       
       hi.add(AllCategorie);
       
       Button electronic = new Button("Ordinateurs",electronics);
       
       Button bags = new Button("Composants ordinateurs",bag);
       
       Container bagContainer = new Container();
       
       Style bagStyle = bagContainer.getStyle();
       
       bagStyle.setBgImage(white);
        
       bagContainer.add(bags);
       
       hi.add(bagContainer);
       
       Container electronicContainer = new Container();
       
       Style styleElectro = electronicContainer.getStyle();
       
       styleElectro.setBgImage(white);
       
       electronicContainer.add(electronic);
       
       hi.add(electronicContainer);
       
       Container exposure = new Container();
       
       SpanLabel text = new SpanLabel("Start today to get more exposure and grow your Business");
       
       exposure.add(text);
       
       Button addListing = new Button("Add Listing");
       
       Style addListingStyle = addListing.getStyle();
       
       addListingStyle.setBgImage(blue);
       
       Button browserListing = new Button("Browser Listing");
       
       Style browserStyle = browserListing.getStyle();
       
       browserStyle.setBgImage(white);
       
       Container buttonContainer = new Container(new FlowLayout(Component.CENTER));
       
       buttonContainer.add(addListing);
       
       buttonContainer.add(browserListing);
       
       exposure.add(buttonContainer);
       
       hi.add(exposure);
       
       Container lastContainer = new Container(new BoxLayout(BoxLayout.Y_AXIS));
       
       Style bgLast = lastContainer.getStyle();
       
       bgLast.setBgImage(black);
       
       Button logo_labdev = new Button(image_title);
       
       lastContainer.add(logo_labdev);
       
       SpanLabel longText = new SpanLabel("Lorem ipsum dolor sit amet, consectetur adipisicing elit,"
               + " sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,"
               + " quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.");
       
       lastContainer.add(longText);
       
       Label sitePage = new Label("Site Pages");
       
       lastContainer.add(sitePage);
       
       Button boston = new Button("Boston");
       
       lastContainer.add(boston);
       
       Button deals = new Button("Deals & Coupons");
       
       lastContainer.add(deals);
       
       Button articlesTips = new Button("Articles & Tips");
       
       lastContainer.add(articlesTips);
       
       Button terms = new Button("Terms & Conditions");
       
       lastContainer.add(terms);
       
       Label adminPages = new Label("Admin Pages");
       
       lastContainer.add(adminPages);
       
       Button categoryButton = new Button("Category");
       
       lastContainer.add(categoryButton);
       
       Button singlePage = new Button("Single Page");
       
       lastContainer.add(singlePage);
       
       Button storeSingle = new Button("Store Single");
       
       lastContainer.add(storeSingle);
       
       Button singlePost =new Button("Single Post");
       
       lastContainer.add(singlePost);
       
       Button blog = new Button("Blog");
       
       lastContainer.add(blog);
       
       hi.add(lastContainer);
       
        //Style test = hi.getStyle();
        
       // test.setBgImage(font_background);
        
       // test.setBackgroundType(BACKGROUND_IMAGE_SCALED);
         
        
        hi.show();
        
       
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }
    
    

}
